/*
 * Animation Utilities
 * Reusable animation classes and keyframes
 */

/* Base Animation Classes */
.animate-fade-in {
  opacity: 0;
  animation: fadeIn var(--transition-slow) var(--easing-smooth) forwards;
}

.animate-fade-in-up {
  opacity: 0;
  transform: translateY(20px);
  animation: fadeInUp var(--transition-slow) var(--easing-smooth) forwards;
  will-change: opacity, transform;
}

.animate-fade-in-down {
  opacity: 0;
  transform: translateY(-20px);
  animation: fadeInDown var(--transition-slow) var(--easing-smooth) forwards;
  will-change: opacity, transform;
}

.animate-slide-in-left {
  opacity: 0;
  transform: translateX(-20px);
  animation: slideInLeft var(--transition-base) var(--easing-smooth) forwards;
  will-change: opacity, transform;
}

.animate-slide-in-right {
  opacity: 0;
  transform: translateX(20px);
  animation: slideInRight var(--transition-base) var(--easing-smooth) forwards;
  will-change: opacity, transform;
}

.animate-scale-in {
  opacity: 0;
  transform: scale(0.9);
  animation: scaleIn var(--transition-base) var(--easing-smooth) forwards;
  will-change: opacity, transform;
}

.animate-blur-in {
  opacity: 0;
  filter: blur(2px);
  animation: blurIn var(--transition-slow) var(--easing-smooth) forwards;
  will-change: opacity, filter;
}

.animate-container-enter {
  opacity: 0;
  transform: translateY(20px) scale(0.98);
  filter: blur(2px);
  animation: containerEnter var(--transition-slow) var(--easing-smooth) forwards;
  will-change: opacity, transform, filter;
}

.animate-divider-expand {
  opacity: 0;
  transform: scaleX(0);
  transform-origin: left;
  animation: dividerExpand var(--transition-slow) var(--easing-smooth) forwards;
  will-change: opacity, transform;
}

.animate-bounce-in {
  opacity: 0;
  transform: translateY(10px) scale(0.9);
  animation: bounceIn 0.4s var(--easing-bounce) forwards;
  will-change: opacity, transform;
}

/* Keyframe Definitions */
@keyframes fadeIn {
  to {
    opacity: 1;
  }
}

@keyframes fadeInUp {
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes fadeInDown {
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes slideInLeft {
  to {
    opacity: 1;
    transform: translateX(0);
  }
}

@keyframes slideInRight {
  to {
    opacity: 1;
    transform: translateX(0);
  }
}

@keyframes scaleIn {
  to {
    opacity: 1;
    transform: scale(1);
  }
}

@keyframes blurIn {
  to {
    opacity: 1;
    filter: blur(0);
  }
}

@keyframes containerEnter {
  0% {
    opacity: 0;
    transform: translateY(20px) scale(0.98);
    filter: blur(2px);
  }
  100% {
    opacity: 1;
    transform: translateY(0) scale(1);
    filter: blur(0);
  }
}

@keyframes dividerExpand {
  0% {
    opacity: 0;
    transform: scaleX(0);
  }
  100% {
    opacity: 1;
    transform: scaleX(1);
  }
}

@keyframes bounceIn {
  0% {
    opacity: 0;
    transform: translateY(10px) scale(0.9);
  }
  70% {
    transform: translateY(-2px) scale(1.05);
  }
  100% {
    opacity: 1;
    transform: translateY(0) scale(1);
  }
}

@keyframes shimmer {
  0% {
    left: -100%;
  }
  100% {
    left: 100%;
  }
}

/* Animation Delays */
.animate-delay-75 { animation-delay: 75ms; }
.animate-delay-100 { animation-delay: 100ms; }
.animate-delay-150 { animation-delay: 150ms; }
.animate-delay-200 { animation-delay: 200ms; }
.animate-delay-300 { animation-delay: 300ms; }
.animate-delay-500 { animation-delay: 500ms; }
.animate-delay-700 { animation-delay: 700ms; }
.animate-delay-1000 { animation-delay: 1000ms; }

/* Animation Durations */
.animate-duration-75 { animation-duration: 75ms; }
.animate-duration-100 { animation-duration: 100ms; }
.animate-duration-150 { animation-duration: 150ms; }
.animate-duration-200 { animation-duration: 200ms; }
.animate-duration-300 { animation-duration: 300ms; }
.animate-duration-500 { animation-duration: 500ms; }
.animate-duration-700 { animation-duration: 700ms; }
.animate-duration-1000 { animation-duration: 1000ms; }

/* Hover Animations */
.hover-lift {
  transition: transform var(--transition-base);
}

.hover-lift:hover {
  transform: translateY(-2px);
}

.hover-scale {
  transition: transform var(--transition-base);
}

.hover-scale:hover {
  transform: scale(1.05);
}

.hover-shimmer {
  position: relative;
  overflow: hidden;
}

.hover-shimmer::before {
  content: '';
  position: absolute;
  top: 0;
  left: -100%;
  width: 100%;
  height: 100%;
  background: var(--gradient-shimmer);
  transition: left 0.5s ease;
}

.hover-shimmer:hover::before {
  left: 100%;
}

/* Utility Classes */
.will-change-transform {
  will-change: transform;
}

.will-change-opacity {
  will-change: opacity;
}

.will-change-auto {
  will-change: auto;
}

/* Reduced Motion Support */
@media (prefers-reduced-motion: reduce) {
  .animate-fade-in,
  .animate-fade-in-up,
  .animate-fade-in-down,
  .animate-slide-in-left,
  .animate-slide-in-right,
  .animate-scale-in,
  .animate-blur-in,
  .animate-container-enter,
  .animate-divider-expand,
  .animate-bounce-in {
    animation: none;
    opacity: 1;
    transform: none;
    filter: none;
  }
  
  .hover-lift:hover,
  .hover-scale:hover {
    transform: none;
  }
  
  .hover-shimmer::before {
    display: none;
  }
}